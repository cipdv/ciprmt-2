[{"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\index.js":"1","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\App.jsx":"2","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Homepage.jsx":"3","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\ThanksForBooking.jsx":"4","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Dashboard.jsx":"5","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\AppointmentDetails.jsx":"6","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\ClientProfile.jsx":"7","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\Header.jsx":"8","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\BookAMassage.jsx":"9","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\contexts\\ClientProfileContext.js":"10","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\ClientProfileList.jsx":"11","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\apis\\ClientFilesApi.js":"12","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\HealthHistory.jsx":"13"},{"size":159,"mtime":1611085932279,"results":"14","hashOfConfig":"15"},{"size":1280,"mtime":1611939569514,"results":"16","hashOfConfig":"15"},{"size":289,"mtime":1611094675411,"results":"17","hashOfConfig":"15"},{"size":368,"mtime":1612124187101,"results":"18","hashOfConfig":"15"},{"size":585,"mtime":1612119564210,"results":"19","hashOfConfig":"15"},{"size":190,"mtime":1611775508697,"results":"20","hashOfConfig":"15"},{"size":2494,"mtime":1612119671557,"results":"21","hashOfConfig":"15"},{"size":580,"mtime":1612123978345,"results":"22","hashOfConfig":"15"},{"size":22615,"mtime":1612123914801,"results":"23","hashOfConfig":"15"},{"size":784,"mtime":1611157047772,"results":"24","hashOfConfig":"15"},{"size":2085,"mtime":1611780835384,"results":"25","hashOfConfig":"15"},{"size":102,"mtime":1611151812814,"results":"26","hashOfConfig":"15"},{"size":3179,"mtime":1612119709221,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"tn7fgm",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\index.js",[],["57","58"],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\App.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Homepage.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\ThanksForBooking.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Dashboard.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\AppointmentDetails.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\ClientProfile.jsx",["59"],"import React, {useContext, useEffect} from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport ClientFilesApi from '../apis/ClientFilesApi'\r\nimport { ClientProfileContext } from '../contexts/ClientProfileContext'\r\n\r\nconst ClientProfile = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const {id} = useParams();\r\n\r\n    const {selectedClientProfile, setSelectedClientProfile} = useContext(ClientProfileContext)\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await ClientFilesApi.get(`/api/1/clientprofiles/${id}`)\r\n                setSelectedClientProfile(response.data.data.clientProfile);\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    const handleReturnToClientList = () => {\r\n        history.push(`/dashboard`)\r\n    }\r\n\r\n    const sendToHealthHistory = () => {\r\n        history.push(`/dashboard/profile/healthhistory/${id}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"tm30\">{selectedClientProfile.first_name}'s profile</h2>\r\n            <table className=\"ui celled table tm30\">\r\n                <thead>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Email</th>\r\n                    <th>Service Selected</th>\r\n                    <th>Reason for Massage</th>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{selectedClientProfile && selectedClientProfile.first_name}</td>\r\n                        <td>{selectedClientProfile && selectedClientProfile.last_name}</td>\r\n                        <td>{selectedClientProfile && selectedClientProfile.email}</td>\r\n                        <td>{selectedClientProfile && selectedClientProfile.service}</td>\r\n                        <td>{selectedClientProfile && selectedClientProfile.reason_for_massage}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div>\r\n                <button className=\"ui button teal\">Appointments</button>\r\n                <button onClick={sendToHealthHistory} className=\"ui button teal\">Health History</button>\r\n                <button onClick={handleReturnToClientList} className=\"ui button blue\"><i className=\"chevron circle left icon\"></i> Back to dashboard</button>\r\n            </div>\r\n            \r\n \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientProfile\r\n","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\Header.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\BookAMassage.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\contexts\\ClientProfileContext.js",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\ClientProfileList.jsx",["60"],"import React, {useEffect, useContext} from 'react'\r\nimport ClientFilesApi from '../apis/ClientFilesApi'\r\nimport { ClientProfileContext } from '../contexts/ClientProfileContext'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst ClientProfileList = (props) => {\r\n\r\n    let history = useHistory();\r\n\r\n    //bring in contexts to store state data from response and update state\r\n    const { ClientProfiles, setClientProfiles } = useContext(ClientProfileContext)\r\n\r\n    //retrieve data from ClientFilesApi and set state of ClientProfiles \r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await ClientFilesApi.get(\"/api/1/clientprofiles\");\r\n                setClientProfiles(response.data.data.clientProfiles);\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    const handleClickProfileSelect = (id) => {\r\n        history.push(`/dashboard/profile/${id}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table className=\"ui selectable celled table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>First name</th>\r\n                        <th>Last name</th>\r\n                        <th>Email</th>\r\n                        <th>Phone</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {ClientProfiles && ClientProfiles.map(clientProfile => {\r\n                        return (\r\n                            <tr onClick={()=>handleClickProfileSelect(clientProfile.id)} key={clientProfile.id}>\r\n                                <td>{clientProfile.first_name}</td>\r\n                                <td>{clientProfile.last_name}</td>\r\n                                <td>{clientProfile.email}</td>\r\n                                <td>Phone</td>\r\n                            </tr>\r\n                        )\r\n                    })}                   \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientProfileList\r\n","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\apis\\ClientFilesApi.js",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\HealthHistory.jsx",["61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":24,"column":8,"nodeType":"68","endLine":24,"endColumn":10,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"70","line":24,"column":8,"nodeType":"68","endLine":24,"endColumn":10,"suggestions":"71"},{"ruleId":"66","severity":1,"message":"67","line":22,"column":8,"nodeType":"68","endLine":22,"endColumn":10,"suggestions":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'setSelectedClientProfile'. Either include them or remove the dependency array.","ArrayExpression",["75"],"React Hook useEffect has a missing dependency: 'setClientProfiles'. Either include it or remove the dependency array.",["76"],["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},{"desc":"78","fix":"82"},"Update the dependencies array to be: [id, setSelectedClientProfile]",{"range":"83","text":"84"},"Update the dependencies array to be: [setClientProfiles]",{"range":"85","text":"86"},{"range":"87","text":"84"},[803,805],"[id, setSelectedClientProfile]",[893,895],"[setClientProfiles]",[800,802]]