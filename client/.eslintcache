[{"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\index.js":"1","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\App.jsx":"2","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Homepage.jsx":"3","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\ThanksForBooking.jsx":"4","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Dashboard.jsx":"5","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\ClientProfile.jsx":"6","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\Header.jsx":"7","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\BookAMassage.jsx":"8","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\contexts\\ClientProfileContext.js":"9","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\ClientProfileList.jsx":"10","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\apis\\ClientFilesApi.js":"11","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\HealthHistory.jsx":"12","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\ClientSearchbar.jsx":"13","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\AddAppointment.jsx":"14","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Appointments.jsx":"15","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\AppointmentList.jsx":"16","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\AppointmentDetails.jsx":"17"},{"size":159,"mtime":1611085932279,"results":"18","hashOfConfig":"19"},{"size":1430,"mtime":1612988102864,"results":"20","hashOfConfig":"19"},{"size":289,"mtime":1611094675411,"results":"21","hashOfConfig":"19"},{"size":368,"mtime":1612124187101,"results":"22","hashOfConfig":"19"},{"size":517,"mtime":1612384722776,"results":"23","hashOfConfig":"19"},{"size":2752,"mtime":1612911695535,"results":"24","hashOfConfig":"19"},{"size":580,"mtime":1612123978345,"results":"25","hashOfConfig":"19"},{"size":22790,"mtime":1612194764159,"results":"26","hashOfConfig":"19"},{"size":955,"mtime":1612987008359,"results":"27","hashOfConfig":"19"},{"size":2085,"mtime":1611780835384,"results":"28","hashOfConfig":"19"},{"size":102,"mtime":1611151812814,"results":"29","hashOfConfig":"19"},{"size":3402,"mtime":1612971129944,"results":"30","hashOfConfig":"19"},{"size":2237,"mtime":1612971165834,"results":"31","hashOfConfig":"19"},{"size":4967,"mtime":1612988915346,"results":"32","hashOfConfig":"19"},{"size":1030,"mtime":1612985589595,"results":"33","hashOfConfig":"19"},{"size":1575,"mtime":1612988057543,"results":"34","hashOfConfig":"19"},{"size":3070,"mtime":1612989023501,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"tn7fgm",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\index.js",[],["75","76"],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\App.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Homepage.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\ThanksForBooking.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Dashboard.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\ClientProfile.jsx",["77"],"import React, {useContext, useEffect} from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport ClientFilesApi from '../apis/ClientFilesApi'\r\nimport { ClientProfileContext } from '../contexts/ClientProfileContext'\r\nimport AddAppointment from '../components/AddAppointment'\r\n\r\nconst ClientProfile = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const {id} = useParams();\r\n\r\n    const {selectedClientProfile, setSelectedClientProfile} = useContext(ClientProfileContext)\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await ClientFilesApi.get(`/api/1/clientprofiles/${id}`)\r\n                setSelectedClientProfile(response.data.data.clientProfile);\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    const handleReturnToClientList = () => {\r\n        history.push(`/dashboard`)\r\n    }\r\n\r\n    const sendToHealthHistory = () => {\r\n        history.push(`/dashboard/profile/healthhistory/${id}`)\r\n    }\r\n\r\n    const viewAppointments = () => {\r\n        history.push(`/dashboard/profile/${id}/appointments`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"tm30\">{selectedClientProfile.first_name}'s profile</h2>\r\n            <table className=\"ui celled table tm30\">\r\n                <thead>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Service Selected</th>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{selectedClientProfile && selectedClientProfile.first_name}</td>\r\n                        <td>{selectedClientProfile && selectedClientProfile.last_name}</td>\r\n                        <td>{selectedClientProfile && selectedClientProfile.email}</td>\r\n                        <td>{selectedClientProfile && selectedClientProfile.phone}</td>\r\n                        <td>{selectedClientProfile && selectedClientProfile.service}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div>\r\n                <button onClick={viewAppointments} className=\"ui button teal\">Appointments</button>\r\n                <button onClick={sendToHealthHistory} className=\"ui button teal\">Health History</button>\r\n                <button onClick={handleReturnToClientList} className=\"ui button blue\"><i className=\"chevron circle left icon\"></i> Back to dashboard</button>\r\n            </div>\r\n            <div style={{marginTop: '3em'}}>\r\n                <AddAppointment />\r\n            </div>\r\n \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientProfile\r\n","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\Header.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\BookAMassage.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\contexts\\ClientProfileContext.js",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\ClientProfileList.jsx",["78"],"import React, {useEffect, useContext} from 'react'\r\nimport ClientFilesApi from '../apis/ClientFilesApi'\r\nimport { ClientProfileContext } from '../contexts/ClientProfileContext'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst ClientProfileList = (props) => {\r\n\r\n    let history = useHistory();\r\n\r\n    //bring in contexts to store state data from response and update state\r\n    const { ClientProfiles, setClientProfiles } = useContext(ClientProfileContext)\r\n\r\n    //retrieve data from ClientFilesApi and set state of ClientProfiles \r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await ClientFilesApi.get(\"/api/1/clientprofiles\");\r\n                setClientProfiles(response.data.data.clientProfiles);\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    const handleClickProfileSelect = (id) => {\r\n        history.push(`/dashboard/profile/${id}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table className=\"ui selectable celled table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>First name</th>\r\n                        <th>Last name</th>\r\n                        <th>Email</th>\r\n                        <th>Phone</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {ClientProfiles && ClientProfiles.map(clientProfile => {\r\n                        return (\r\n                            <tr onClick={()=>handleClickProfileSelect(clientProfile.id)} key={clientProfile.id}>\r\n                                <td>{clientProfile.first_name}</td>\r\n                                <td>{clientProfile.last_name}</td>\r\n                                <td>{clientProfile.email}</td>\r\n                                <td>Phone</td>\r\n                            </tr>\r\n                        )\r\n                    })}                   \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientProfileList\r\n",["79","80"],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\apis\\ClientFilesApi.js",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\HealthHistory.jsx",["81"],"import React, {useContext, useEffect} from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { ClientProfileContext } from '../contexts/ClientProfileContext'\r\nimport ClientFilesApi from '../apis/ClientFilesApi'\r\n\r\nconst HealthHistory = () => {\r\n\r\n    let history = useHistory();\r\n    const {id} = useParams();\r\n    const {selectedClientProfile, setSelectedClientProfile} = useContext(ClientProfileContext);\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await ClientFilesApi.get(`/api/1/clientprofiles/${id}`)\r\n                setSelectedClientProfile(response.data.data.clientProfile);\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    const returnToClientList = () => {\r\n        history.push(`/dashboard`)\r\n    }\r\n\r\n    const returnToClientProfile = () => {\r\n        history.push(`/dashboard/profile/${id}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2 className=\"tm30\">{selectedClientProfile.first_name}'s Health History</h2>\r\n                <table className=\"ui celled compact table tm30\">\r\n                    <thead>\r\n                        <th>Reason for seeking Massage Therapy</th>\r\n                        <th>Service</th>\r\n                        <th>Treatment from other HCPs</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{selectedClientProfile && selectedClientProfile.reason_for_massage}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.service}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.other_hcp}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"tm30\">\r\n                <h4>Cardiovascular</h4>\r\n                <table className=\"ui celled compact table tm30\">\r\n                    <thead>\r\n                        <th>None</th>\r\n                        <th>High Blood Pressure</th>\r\n                        <th>Low Blood Pressure</th>\r\n                        <th>History of Heart Attack(s)</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{selectedClientProfile && selectedClientProfile.cardio_none ? \"yes\" : \"no\"}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.high_blood_pressure ? \"yes\" : \"no\"}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.low_blood_pressure ? \"yes\" : \"no\"}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.heart_attack ? \"yes\" : \"no\"}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"tm30\">\r\n                <button className=\"ui button teal\">Appointments</button>\r\n                <button onClick={returnToClientList} className=\"ui button blue\"><i className=\"chevron circle left icon\"></i> Back to Dashboard</button>\r\n                <button className=\"ui button olive\" onClick={returnToClientProfile}>Back to client profile</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HealthHistory\r\n","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\ClientSearchbar.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\AddAppointment.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Appointments.jsx",["82","83"],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\AppointmentList.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\AppointmentDetails.jsx",["84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":25,"column":8,"nodeType":"91","endLine":25,"endColumn":10,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"93","line":24,"column":8,"nodeType":"91","endLine":24,"endColumn":10,"suggestions":"94"},{"ruleId":"85","replacedBy":"95"},{"ruleId":"87","replacedBy":"96"},{"ruleId":"89","severity":1,"message":"90","line":22,"column":8,"nodeType":"91","endLine":22,"endColumn":10,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":39,"nodeType":"100","messageId":"101","endLine":1,"endColumn":47},{"ruleId":"89","severity":1,"message":"90","line":22,"column":8,"nodeType":"91","endLine":22,"endColumn":10,"suggestions":"102"},{"ruleId":"89","severity":1,"message":"103","line":23,"column":8,"nodeType":"91","endLine":23,"endColumn":10,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'setSelectedClientProfile'. Either include them or remove the dependency array.","ArrayExpression",["107"],"React Hook useEffect has a missing dependency: 'setClientProfiles'. Either include it or remove the dependency array.",["108"],["105"],["106"],["109"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["110"],"React Hook useEffect has missing dependencies: 'id' and 'setSelectedAppointment'. Either include them or remove the dependency array.",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"112","fix":"116"},{"desc":"112","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [id, setSelectedClientProfile]",{"range":"120","text":"121"},"Update the dependencies array to be: [setClientProfiles]",{"range":"122","text":"123"},{"range":"124","text":"121"},{"range":"125","text":"121"},"Update the dependencies array to be: [id, setSelectedAppointment]",{"range":"126","text":"127"},[862,864],"[id, setSelectedClientProfile]",[893,895],"[setClientProfiles]",[800,802],[809,811],[810,812],"[id, setSelectedAppointment]"]