[{"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\index.js":"1","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\App.jsx":"2","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Homepage.jsx":"3","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\ThanksForBooking.jsx":"4","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Dashboard.jsx":"5","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\ClientProfile.jsx":"6","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\Header.jsx":"7","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\BookAMassage.jsx":"8","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\contexts\\ClientProfileContext.js":"9","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\ClientProfileList.jsx":"10","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\apis\\ClientFilesApi.js":"11","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\HealthHistory.jsx":"12","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\ClientSearchbar.jsx":"13","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\AddAppointment.jsx":"14","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\AppointmentList.jsx":"15","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\AppointmentDetails.jsx":"16","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\Login\\Login.jsx":"17","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\LoginPage.jsx":"18","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Register.jsx":"19","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\AppointmentsRoute.jsx":"20","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\Login\\DashboardHeader.jsx":"21","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\PrivacyPolicy.jsx":"22"},{"size":159,"mtime":1611085932279,"results":"23","hashOfConfig":"24"},{"size":1975,"mtime":1614044217241,"results":"25","hashOfConfig":"24"},{"size":289,"mtime":1613882358305,"results":"26","hashOfConfig":"24"},{"size":368,"mtime":1612124187101,"results":"27","hashOfConfig":"24"},{"size":911,"mtime":1614095226629,"results":"28","hashOfConfig":"24"},{"size":3100,"mtime":1614044268704,"results":"29","hashOfConfig":"24"},{"size":676,"mtime":1613778313391,"results":"30","hashOfConfig":"24"},{"size":26119,"mtime":1614108514935,"results":"31","hashOfConfig":"24"},{"size":1164,"mtime":1613849692881,"results":"32","hashOfConfig":"24"},{"size":2085,"mtime":1611780835384,"results":"33","hashOfConfig":"24"},{"size":102,"mtime":1611151812814,"results":"34","hashOfConfig":"24"},{"size":3346,"mtime":1614042738823,"results":"35","hashOfConfig":"24"},{"size":2455,"mtime":1613942272790,"results":"36","hashOfConfig":"24"},{"size":8771,"mtime":1614108642420,"results":"37","hashOfConfig":"24"},{"size":1575,"mtime":1612988057543,"results":"38","hashOfConfig":"24"},{"size":4454,"mtime":1614110571178,"results":"39","hashOfConfig":"24"},{"size":1787,"mtime":1613924924041,"results":"40","hashOfConfig":"24"},{"size":209,"mtime":1613756173444,"results":"41","hashOfConfig":"24"},{"size":2153,"mtime":1613778476983,"results":"42","hashOfConfig":"24"},{"size":1417,"mtime":1613882308734,"results":"43","hashOfConfig":"24"},{"size":859,"mtime":1613882500689,"results":"44","hashOfConfig":"24"},{"size":8764,"mtime":1614031177045,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"tn7fgm",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\index.js",[],["97","98"],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\App.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Homepage.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\ThanksForBooking.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Dashboard.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\ClientProfile.jsx",["99","100"],"import React, {useContext, useEffect} from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport ClientFilesApi from '../apis/ClientFilesApi'\r\nimport { ClientProfileContext } from '../contexts/ClientProfileContext'\r\nimport AddAppointment from '../components/AddAppointment'\r\nimport Login from '../components/Login/Login'\r\nimport DashboardHeader from '../components/Login/DashboardHeader'\r\n\r\nconst ClientProfile = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const {id} = useParams();\r\n\r\n    const {selectedClientProfile, setSelectedClientProfile, userLoggedIn} = useContext(ClientProfileContext)\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await ClientFilesApi.get(`/api/1/clientprofiles/${id}`)\r\n                setSelectedClientProfile(response.data.data.clientProfile);\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    const sendToHealthHistory = () => {\r\n        history.push(`/dashboard/profile/healthhistory/${id}`)\r\n    }\r\n\r\n    const viewAppointments = () => {\r\n        history.push(`/dashboard/profile/${id}/appointments`)\r\n    }\r\n\r\n    const sendToAddAppointment = () => {\r\n        history.push(`/dashboard/profile/${id}/addappointment`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!userLoggedIn ?\r\n                <Login />    \r\n            :\r\n            <div>\r\n                <DashboardHeader />\r\n                <h2>{selectedClientProfile && selectedClientProfile.first_name}'s profile</h2>\r\n                <table className=\"ui celled table tm30\">\r\n                    <thead>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Email</th>\r\n                        <th>Phone</th>\r\n                        <th>Service Selected</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{selectedClientProfile && selectedClientProfile.first_name}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.last_name}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.email}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.phone}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.service}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div>\r\n                    <button onClick={viewAppointments} className=\"ui button teal\">Appointments</button>\r\n                    <button onClick={sendToHealthHistory} className=\"ui button teal\">Health History</button>\r\n                    <button onClick={sendToAddAppointment} className=\"ui button pink\">Add appointment</button>\r\n                </div>\r\n                <div style={{marginTop: '3em'}}>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>      \r\n    )\r\n}\r\n\r\nexport default ClientProfile\r\n","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\Header.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\BookAMassage.jsx",["101","102","103"],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\contexts\\ClientProfileContext.js",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\ClientProfileList.jsx",["104"],"import React, {useEffect, useContext} from 'react'\r\nimport ClientFilesApi from '../apis/ClientFilesApi'\r\nimport { ClientProfileContext } from '../contexts/ClientProfileContext'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst ClientProfileList = (props) => {\r\n\r\n    let history = useHistory();\r\n\r\n    //bring in contexts to store state data from response and update state\r\n    const { ClientProfiles, setClientProfiles } = useContext(ClientProfileContext)\r\n\r\n    //retrieve data from ClientFilesApi and set state of ClientProfiles \r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await ClientFilesApi.get(\"/api/1/clientprofiles\");\r\n                setClientProfiles(response.data.data.clientProfiles);\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    const handleClickProfileSelect = (id) => {\r\n        history.push(`/dashboard/profile/${id}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table className=\"ui selectable celled table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>First name</th>\r\n                        <th>Last name</th>\r\n                        <th>Email</th>\r\n                        <th>Phone</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {ClientProfiles && ClientProfiles.map(clientProfile => {\r\n                        return (\r\n                            <tr onClick={()=>handleClickProfileSelect(clientProfile.id)} key={clientProfile.id}>\r\n                                <td>{clientProfile.first_name}</td>\r\n                                <td>{clientProfile.last_name}</td>\r\n                                <td>{clientProfile.email}</td>\r\n                                <td>Phone</td>\r\n                            </tr>\r\n                        )\r\n                    })}                   \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientProfileList\r\n",["105","106"],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\apis\\ClientFilesApi.js",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\HealthHistory.jsx",["107"],"import React, {useContext, useEffect} from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { ClientProfileContext } from '../contexts/ClientProfileContext'\r\nimport ClientFilesApi from '../apis/ClientFilesApi'\r\nimport DashboardHeader from './Login/DashboardHeader'\r\n\r\nconst HealthHistory = () => {\r\n\r\n    let history = useHistory();\r\n    const {id} = useParams();\r\n    const {selectedClientProfile, setSelectedClientProfile} = useContext(ClientProfileContext);\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await ClientFilesApi.get(`/api/1/clientprofiles/${id}`)\r\n                setSelectedClientProfile(response.data.data.clientProfile);\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    const returnToClientProfile = () => {\r\n        history.push(`/dashboard/profile/${id}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <DashboardHeader />\r\n                <h2>{selectedClientProfile.first_name}'s Health History</h2>\r\n                <h4>Last updated: {selectedClientProfile && selectedClientProfile.date_updated.toString()}</h4>\r\n                <table className=\"ui celled compact table tm30\">\r\n                    <thead>\r\n                        <th>Reason for seeking Massage Therapy</th>\r\n                        <th>Service</th>\r\n                        <th>Treatment from other HCPs</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{selectedClientProfile && selectedClientProfile.reason_for_massage}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.service}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.other_hcp}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"tm30\">\r\n                <h4>Cardiovascular</h4>\r\n                <table className=\"ui celled compact table tm30\">\r\n                    <thead>\r\n                        <th>None</th>\r\n                        <th>High Blood Pressure</th>\r\n                        <th>Low Blood Pressure</th>\r\n                        <th>History of Heart Attack(s)</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{selectedClientProfile && selectedClientProfile.cardio_none ? \"yes\" : \"no\"}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.high_blood_pressure ? \"yes\" : \"no\"}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.low_blood_pressure ? \"yes\" : \"no\"}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.heart_attack ? \"yes\" : \"no\"}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"tm30\">\r\n                <button className=\"ui button teal\">Appointments</button>\r\n                <button className=\"ui button\" onClick={returnToClientProfile}>Back to client profile</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HealthHistory\r\n","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\ClientSearchbar.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\AddAppointment.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\AppointmentList.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\AppointmentDetails.jsx",["108"],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\Login\\Login.jsx",["109"],"import React, { useState, useContext } from 'react'\r\nimport ClientFilesApi from '../../apis/ClientFilesApi'\r\nimport {ClientProfileContext} from '../../contexts/ClientProfileContext'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst Login = () => {\r\n\r\n    let history = useHistory()\r\n\r\n    const {setUserLoggedIn} = useContext(ClientProfileContext)  \r\n    const {username, setUsername} = useContext(ClientProfileContext)\r\n    const {password, setPassword} = useContext(ClientProfileContext)\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const response = await ClientFilesApi.post(`/api/1/login`, {\r\n                username,\r\n                password\r\n            })\r\n            console.log(response)\r\n            if (response.data.data.user === 'cip.devries@gmail.com') {\r\n                setUserLoggedIn(true)\r\n                setPassword(\"\")\r\n                history.push(`/dashboard`)\r\n            } \r\n        } catch (err) {\r\n            console.log(err)\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Login</h3>\r\n            <form className=\"ui form\">\r\n                <div className=\"field\" >\r\n                    <label htmlFor=\"\">Username</label>\r\n                    <input value={username} onChange={e=>setUsername(e.target.value)} type=\"email\" placeholder=\"Enter your email address\" />\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label htmlFor=\"\">Password</label>\r\n                    <input value={password} onChange={e=>setPassword(e.target.value)} type=\"password\"/>\r\n                </div>\r\n                <button onClick={handleLogin} className=\"ui button teal\">Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\LoginPage.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Register.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\AppointmentsRoute.jsx",["110","111"],"import React, {useContext, useEffect, useState} from 'react'\r\nimport {ClientProfileContext} from '../contexts/ClientProfileContext'\r\nimport {useParams} from 'react-router-dom'\r\nimport ClientFilesApi from '../apis/ClientFilesApi'\r\nimport AppointmentList from '../components/AppointmentList'\r\nimport Login from '../components/Login/Login'\r\nimport DashboardHeader from '../components/Login/DashboardHeader'\r\n\r\nconst AppointmentsRoute = () => {\r\n\r\n    const { selectedClientProfile, setSelectedClientProfile, userLoggedIn } = useContext(ClientProfileContext)\r\n    const {id} = useParams()\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await ClientFilesApi.get(`/api/1/clientprofiles/${id}`)\r\n                setSelectedClientProfile(response.data.data)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [])\r\n    \r\n        return (\r\n            <div>\r\n                {!userLoggedIn ?\r\n                    <Login />\r\n                :\r\n                    <div>\r\n                        <DashboardHeader />\r\n                        <h3>List of appointments</h3>\r\n                        <AppointmentList appointments={selectedClientProfile.appointments} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default AppointmentsRoute\r\n","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\Login\\DashboardHeader.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\PrivacyPolicy.jsx",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":22},{"ruleId":"120","severity":1,"message":"121","line":27,"column":8,"nodeType":"122","endLine":27,"endColumn":10,"suggestions":"123"},{"ruleId":"116","severity":1,"message":"124","line":65,"column":19,"nodeType":"118","messageId":"119","endLine":65,"endColumn":27},{"ruleId":"125","severity":1,"message":"126","line":131,"column":166,"nodeType":"127","endLine":131,"endColumn":193},{"ruleId":"125","severity":1,"message":"126","line":394,"column":105,"nodeType":"127","endLine":394,"endColumn":132},{"ruleId":"120","severity":1,"message":"128","line":24,"column":8,"nodeType":"122","endLine":24,"endColumn":10,"suggestions":"129"},{"ruleId":"112","replacedBy":"130"},{"ruleId":"114","replacedBy":"131"},{"ruleId":"120","severity":1,"message":"121","line":23,"column":8,"nodeType":"122","endLine":23,"endColumn":10,"suggestions":"132"},{"ruleId":"120","severity":1,"message":"133","line":25,"column":8,"nodeType":"122","endLine":25,"endColumn":10,"suggestions":"134"},{"ruleId":"116","severity":1,"message":"135","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"135","line":1,"column":39,"nodeType":"118","messageId":"119","endLine":1,"endColumn":47},{"ruleId":"120","severity":1,"message":"121","line":24,"column":8,"nodeType":"122","endLine":24,"endColumn":10,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'AddAppointment' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'setSelectedClientProfile'. Either include them or remove the dependency array.","ArrayExpression",["139"],"'response' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'setClientProfiles'. Either include it or remove the dependency array.",["140"],["137"],["138"],["141"],"React Hook useEffect has missing dependencies: 'id' and 'setSelectedAppointment'. Either include them or remove the dependency array.",["142"],"'useState' is defined but never used.",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"144","fix":"148"},{"desc":"149","fix":"150"},{"desc":"144","fix":"151"},"Update the dependencies array to be: [id, setSelectedClientProfile]",{"range":"152","text":"153"},"Update the dependencies array to be: [setClientProfiles]",{"range":"154","text":"155"},{"range":"156","text":"153"},"Update the dependencies array to be: [id, setSelectedAppointment]",{"range":"157","text":"158"},{"range":"159","text":"153"},[990,992],"[id, setSelectedClientProfile]",[893,895],"[setClientProfiles]",[855,857],[938,940],"[id, setSelectedAppointment]",[942,944]]